{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"./Block","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[6], \"react-native\");\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"prop-types\"));\n\n  var _Block = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./Block\"));\n\n  var _jsxFileName = \"/home/satya/Desktop/SE/new_lunch/src/webui/node_modules/galio-framework/src/DeckSwiper.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _Dimensions$get = _reactNative.Dimensions.get('screen'),\n      SCREEN_WIDTH = _Dimensions$get.width;\n\n  function DeckSwiper(_ref) {\n    var onSwipeRight = _ref.onSwipeRight,\n        onSwipeLeft = _ref.onSwipeLeft,\n        focusedElementStyle = _ref.focusedElementStyle,\n        nextElementStyle = _ref.nextElementStyle,\n        components = _ref.components,\n        style = _ref.style;\n\n    var _React$useState = _react.default.useState(0),\n        _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n        currentIndex = _React$useState2[0],\n        setCurrentIndex = _React$useState2[1];\n\n    var position = new _reactNative.Animated.ValueXY();\n    var rotate = position.x.interpolate({\n      inputRange: [-SCREEN_WIDTH / 2, 0, SCREEN_WIDTH / 2],\n      outputRange: [\"-10deg\", \"0deg\", \"10deg\"],\n      extrapolate: \"clamp\"\n    });\n    var rotateAndTranslate = {\n      transform: [{\n        rotate: rotate\n      }].concat((0, _toConsumableArray2.default)(position.getTranslateTransform()))\n    };\n    var nextCardOpacity = position.x.interpolate({\n      inputRange: [-SCREEN_WIDTH / 2, 0, SCREEN_WIDTH / 2],\n      outputRange: [1, 0, 1],\n      extrapolate: \"clamp\"\n    });\n    var nextCardScale = position.x.interpolate({\n      inputRange: [-SCREEN_WIDTH / 2, 0, SCREEN_WIDTH / 2],\n      outputRange: [1, 0.8, 1],\n      extrapolate: \"clamp\"\n    });\n\n    var panResponder = _reactNative.PanResponder.create({\n      onStartShouldSetPanResponder: function onStartShouldSetPanResponder(evt, gestureState) {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n        position.setValue({\n          x: gestureState.dx,\n          y: gestureState.dy\n        });\n      },\n      onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n        if (gestureState.dx > 110) {\n          _reactNative.Animated.spring(position, {\n            toValue: {\n              x: SCREEN_WIDTH + 100,\n              y: gestureState.dy\n            }\n          }).start(function () {\n            setCurrentIndex(currentIndex + 1);\n          });\n\n          if (onSwipeRight) onSwipeRight();\n        } else if (gestureState.dx < -110) {\n          _reactNative.Animated.spring(position, {\n            toValue: {\n              x: -SCREEN_WIDTH - 100,\n              y: gestureState.dy\n            }\n          }).start(function () {\n            setCurrentIndex(currentIndex + 1);\n          });\n\n          if (onSwipeLeft) onSwipeLeft();\n        } else {\n          _reactNative.Animated.spring(position, {\n            toValue: {\n              x: 0,\n              y: 0\n            },\n            friction: 4\n          }).start();\n        }\n      }\n    });\n\n    _react.default.useEffect(function () {\n      position.setValue({\n        x: 0,\n        y: 0\n      });\n    }, [currentIndex]);\n\n    function renderComponents(components) {\n      return components.map(function (item, i) {\n        if (i < currentIndex) {\n          return null;\n        } else if (i == currentIndex) {\n          return _react.default.createElement(_reactNative.Animated.View, (0, _extends2.default)({\n            key: i,\n            style: [rotateAndTranslate, _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), focusedElementStyle]\n          }, panResponder.panHandlers, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91\n            }\n          }), item);\n        } else {\n          return _react.default.createElement(_reactNative.Animated.View, {\n            key: i,\n            style: [_objectSpread({\n              opacity: nextCardOpacity,\n              transform: [{\n                scale: nextCardScale\n              }]\n            }, _reactNative.StyleSheet.absoluteFillObject), nextElementStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            }\n          }, item);\n        }\n      }).reverse();\n    }\n\n    return _react.default.createElement(_Block.default, {\n      flex: true,\n      center: true,\n      style: [{\n        width: SCREEN_WIDTH * 0.7\n      }, style],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      }\n    }, renderComponents(components));\n  }\n\n  DeckSwiper.propTypes = {\n    components: _propTypes.default.array.isRequired,\n    onSwipeRight: _propTypes.default.func,\n    onSwipeLeft: _propTypes.default.func,\n    focusedElementStyle: _propTypes.default.any,\n    nextElementStyle: _propTypes.default.any,\n    style: _propTypes.default.any\n  };\n  var _default = DeckSwiper;\n  exports.default = _default;\n});","map":[[17,0,1,0],[19,0,2,0],[21,0,8,0],[23,0,10,0],[31,24,12,32,"Dimensions"],[31,48,12,43,"get"],[31,51,12,32],[31,52,12,47],[31,60,12,32],[31,61],[32,6,12,15,"SCREEN_WIDTH"],[32,18],[32,37,12,8,"width"],[32,42],[34,0,14,0],[34,11,14,9,"DeckSwiper"],[34,21,14,0],[34,28,21,3],[35,0,21,3],[35,8,15,2,"onSwipeRight"],[35,20,21,3],[35,28,15,2,"onSwipeRight"],[35,40,21,3],[36,0,21,3],[36,8,16,2,"onSwipeLeft"],[36,19,21,3],[36,27,16,2,"onSwipeLeft"],[36,38,21,3],[37,0,21,3],[37,8,17,2,"focusedElementStyle"],[37,27,21,3],[37,35,17,2,"focusedElementStyle"],[37,54,21,3],[38,0,21,3],[38,8,18,2,"nextElementStyle"],[38,24,21,3],[38,32,18,2,"nextElementStyle"],[38,48,21,3],[39,0,21,3],[39,8,19,2,"components"],[39,18,21,3],[39,26,19,2,"components"],[39,36,21,3],[40,0,21,3],[40,8,20,2,"style"],[40,13,21,3],[40,21,20,2,"style"],[40,26,21,3],[42,0,21,3],[42,26,22,42,"React"],[42,41,22,48,"useState"],[42,49,22,42],[42,50,22,57],[42,51,22,42],[42,52,21,3],[43,0,21,3],[44,0,21,3],[44,8,22,9,"currentIndex"],[44,20,21,3],[45,0,21,3],[45,8,22,23,"setCurrentIndex"],[45,23,21,3],[47,0,23,2],[47,8,23,8,"position"],[47,16,23,16],[47,19,23,19],[47,23,23,23,"Animated"],[47,45,23,32,"ValueXY"],[47,52,23,19],[47,54,23,2],[48,0,25,2],[48,8,25,8,"rotate"],[48,14,25,14],[48,17,25,17,"position"],[48,25,25,25],[48,26,25,26,"x"],[48,27,25,17],[48,28,25,28,"interpolate"],[48,39,25,17],[48,40,25,40],[49,0,26,4,"inputRange"],[49,6,26,4,"inputRange"],[49,16,26,14],[49,18,26,16],[49,19,26,17],[49,20,26,18,"SCREEN_WIDTH"],[49,32,26,17],[49,35,26,33],[49,36,26,16],[49,38,26,36],[49,39,26,16],[49,41,26,39,"SCREEN_WIDTH"],[49,53,26,51],[49,56,26,54],[49,57,26,16],[49,58,25,40],[50,0,27,4,"outputRange"],[50,6,27,4,"outputRange"],[50,17,27,15],[50,19,27,17],[50,20,27,18],[50,28,27,17],[50,30,27,28],[50,36,27,17],[50,38,27,36],[50,45,27,17],[50,46,25,40],[51,0,28,4,"extrapolate"],[51,6,28,4,"extrapolate"],[51,17,28,15],[51,19,28,17],[52,0,25,40],[52,5,25,17],[52,6,25,2],[53,0,31,2],[53,8,31,8,"rotateAndTranslate"],[53,26,31,26],[53,29,31,29],[54,0,32,4,"transform"],[54,6,32,4,"transform"],[54,15,32,13],[54,18,33,6],[55,0,34,8,"rotate"],[55,8,34,8,"rotate"],[55,14,34,14],[55,16,34,16,"rotate"],[56,0,33,6],[56,7,32,13],[56,49,36,9,"position"],[56,57,36,17],[56,58,36,18,"getTranslateTransform"],[56,79,36,9],[56,81,32,13],[57,0,31,29],[57,5,31,2],[58,0,40,2],[58,8,40,8,"nextCardOpacity"],[58,23,40,23],[58,26,40,26,"position"],[58,34,40,34],[58,35,40,35,"x"],[58,36,40,26],[58,37,40,37,"interpolate"],[58,48,40,26],[58,49,40,49],[59,0,41,4,"inputRange"],[59,6,41,4,"inputRange"],[59,16,41,14],[59,18,41,16],[59,19,41,17],[59,20,41,18,"SCREEN_WIDTH"],[59,32,41,17],[59,35,41,33],[59,36,41,16],[59,38,41,36],[59,39,41,16],[59,41,41,39,"SCREEN_WIDTH"],[59,53,41,51],[59,56,41,54],[59,57,41,16],[59,58,40,49],[60,0,42,4,"outputRange"],[60,6,42,4,"outputRange"],[60,17,42,15],[60,19,42,17],[60,20,42,18],[60,21,42,17],[60,23,42,21],[60,24,42,17],[60,26,42,24],[60,27,42,17],[60,28,40,49],[61,0,43,4,"extrapolate"],[61,6,43,4,"extrapolate"],[61,17,43,15],[61,19,43,17],[62,0,40,49],[62,5,40,26],[62,6,40,2],[63,0,46,2],[63,8,46,8,"nextCardScale"],[63,21,46,21],[63,24,46,24,"position"],[63,32,46,32],[63,33,46,33,"x"],[63,34,46,24],[63,35,46,35,"interpolate"],[63,46,46,24],[63,47,46,47],[64,0,47,4,"inputRange"],[64,6,47,4,"inputRange"],[64,16,47,14],[64,18,47,16],[64,19,47,17],[64,20,47,18,"SCREEN_WIDTH"],[64,32,47,17],[64,35,47,33],[64,36,47,16],[64,38,47,36],[64,39,47,16],[64,41,47,39,"SCREEN_WIDTH"],[64,53,47,51],[64,56,47,54],[64,57,47,16],[64,58,46,47],[65,0,48,4,"outputRange"],[65,6,48,4,"outputRange"],[65,17,48,15],[65,19,48,17],[65,20,48,18],[65,21,48,17],[65,23,48,21],[65,26,48,17],[65,28,48,26],[65,29,48,17],[65,30,46,47],[66,0,49,4,"extrapolate"],[66,6,49,4,"extrapolate"],[66,17,49,15],[66,19,49,17],[67,0,46,47],[67,5,46,24],[67,6,46,2],[69,0,52,2],[69,8,52,8,"panResponder"],[69,20,52,20],[69,23,52,23,"PanResponder"],[69,49,52,36,"create"],[69,55,52,23],[69,56,52,43],[70,0,53,4,"onStartShouldSetPanResponder"],[70,6,53,4,"onStartShouldSetPanResponder"],[70,34,53,32],[70,36,53,34],[70,74,53,35,"evt"],[70,77,53,34],[70,79,53,40,"gestureState"],[70,91,53,34],[71,0,53,34],[71,15,53,57],[71,19,53,34],[72,0,53,34],[72,7,52,43],[73,0,54,4,"onPanResponderMove"],[73,6,54,4,"onPanResponderMove"],[73,24,54,22],[73,26,54,24],[73,54,54,25,"evt"],[73,57,54,24],[73,59,54,30,"gestureState"],[73,71,54,24],[73,73,54,47],[74,0,55,6,"position"],[74,8,55,6,"position"],[74,16,55,14],[74,17,55,15,"setValue"],[74,25,55,6],[74,26,55,24],[75,0,55,26,"x"],[75,10,55,26,"x"],[75,11,55,27],[75,13,55,29,"gestureState"],[75,25,55,41],[75,26,55,42,"dx"],[75,28,55,24],[76,0,55,46,"y"],[76,10,55,46,"y"],[76,11,55,47],[76,13,55,49,"gestureState"],[76,25,55,61],[76,26,55,62,"dy"],[77,0,55,24],[77,9,55,6],[78,0,56,5],[78,7,52,43],[79,0,57,4,"onPanResponderRelease"],[79,6,57,4,"onPanResponderRelease"],[79,27,57,25],[79,29,57,27],[79,60,57,28,"evt"],[79,63,57,27],[79,65,57,33,"gestureState"],[79,77,57,27],[79,79,57,50],[80,0,58,6],[80,12,58,9,"gestureState"],[80,24,58,21],[80,25,58,22,"dx"],[80,27,58,9],[80,30,58,27],[80,33,58,6],[80,35,58,32],[81,0,59,8,"Animated"],[81,32,59,17,"spring"],[81,38,59,8],[81,39,59,24,"position"],[81,47,59,8],[81,49,59,34],[82,0,60,10,"toValue"],[82,12,60,10,"toValue"],[82,19,60,17],[82,21,60,19],[83,0,60,21,"x"],[83,14,60,21,"x"],[83,15,60,22],[83,17,60,24,"SCREEN_WIDTH"],[83,29,60,36],[83,32,60,39],[83,35,60,19],[84,0,60,44,"y"],[84,14,60,44,"y"],[84,15,60,45],[84,17,60,47,"gestureState"],[84,29,60,59],[84,30,60,60,"dy"],[85,0,60,19],[86,0,59,34],[86,11,59,8],[86,13,61,11,"start"],[86,18,59,8],[86,19,61,17],[86,31,61,23],[87,0,62,10,"setCurrentIndex"],[87,12,62,10,"setCurrentIndex"],[87,27,62,25],[87,28,62,26,"currentIndex"],[87,40,62,38],[87,43,62,41],[87,44,62,25],[87,45,62,10],[88,0,63,9],[88,11,59,8],[90,0,64,7],[90,14,64,10,"onSwipeRight"],[90,26,64,7],[90,28,64,24,"onSwipeRight"],[90,40,64,36],[91,0,65,7],[91,9,58,6],[91,15,65,12],[91,19,65,15,"gestureState"],[91,31,65,27],[91,32,65,28,"dx"],[91,34,65,15],[91,37,65,33],[91,38,65,34],[91,41,65,12],[91,43,65,39],[92,0,66,8,"Animated"],[92,32,66,17,"spring"],[92,38,66,8],[92,39,66,24,"position"],[92,47,66,8],[92,49,66,34],[93,0,67,10,"toValue"],[93,12,67,10,"toValue"],[93,19,67,17],[93,21,67,19],[94,0,67,21,"x"],[94,14,67,21,"x"],[94,15,67,22],[94,17,67,24],[94,18,67,25,"SCREEN_WIDTH"],[94,30,67,24],[94,33,67,40],[94,36,67,19],[95,0,67,45,"y"],[95,14,67,45,"y"],[95,15,67,46],[95,17,67,48,"gestureState"],[95,29,67,60],[95,30,67,61,"dy"],[96,0,67,19],[97,0,66,34],[97,11,66,8],[97,13,68,11,"start"],[97,18,66,8],[97,19,68,17],[97,31,68,23],[98,0,69,10,"setCurrentIndex"],[98,12,69,10,"setCurrentIndex"],[98,27,69,25],[98,28,69,26,"currentIndex"],[98,40,69,38],[98,43,69,41],[98,44,69,25],[98,45,69,10],[99,0,70,9],[99,11,66,8],[101,0,71,8],[101,14,71,11,"onSwipeLeft"],[101,25,71,8],[101,27,71,24,"onSwipeLeft"],[101,38,71,35],[102,0,72,7],[102,9,65,12],[102,15,72,11],[103,0,73,8,"Animated"],[103,32,73,17,"spring"],[103,38,73,8],[103,39,73,24,"position"],[103,47,73,8],[103,49,73,34],[104,0,74,10,"toValue"],[104,12,74,10,"toValue"],[104,19,74,17],[104,21,74,19],[105,0,74,21,"x"],[105,14,74,21,"x"],[105,15,74,22],[105,17,74,24],[105,18,74,19],[106,0,74,27,"y"],[106,14,74,27,"y"],[106,15,74,28],[106,17,74,30],[107,0,74,19],[107,13,73,34],[108,0,75,10,"friction"],[108,12,75,10,"friction"],[108,20,75,18],[108,22,75,20],[109,0,73,34],[109,11,73,8],[109,13,76,11,"start"],[109,18,73,8],[110,0,77,7],[111,0,78,5],[112,0,52,43],[112,5,52,23],[112,6,52,2],[114,0,81,2,"React"],[114,19,81,8,"useEffect"],[114,28,81,2],[114,29,81,18],[114,41,81,24],[115,0,82,4,"position"],[115,6,82,4,"position"],[115,14,82,12],[115,15,82,13,"setValue"],[115,23,82,4],[115,24,82,22],[116,0,82,24,"x"],[116,8,82,24,"x"],[116,9,82,25],[116,11,82,27],[116,12,82,22],[117,0,82,30,"y"],[117,8,82,30,"y"],[117,9,82,31],[117,11,82,33],[118,0,82,22],[118,7,82,4],[119,0,83,3],[119,5,81,2],[119,7,83,5],[119,8,83,6,"currentIndex"],[119,20,83,5],[119,21,81,2],[121,0,85,2],[121,13,85,11,"renderComponents"],[121,29,85,2],[121,30,85,28,"components"],[121,40,85,2],[121,42,85,40],[122,0,86,4],[122,13,86,11,"components"],[122,23,86,21],[122,24,86,22,"map"],[122,27,86,11],[122,28,86,26],[122,38,86,27,"item"],[122,42,86,26],[122,44,86,33,"i"],[122,45,86,26],[122,47,86,39],[123,0,87,6],[123,12,87,9,"i"],[123,13,87,10],[123,16,87,13,"currentIndex"],[123,28,87,6],[123,30,87,27],[124,0,88,8],[124,17,88,15],[124,21,88,8],[125,0,89,7],[125,9,87,6],[125,15,89,12],[125,19,89,15,"i"],[125,20,89,16],[125,24,89,20,"currentIndex"],[125,36,89,12],[125,38,89,33],[126,0,90,8],[126,17,91,10],[126,46,91,11],[126,67,91,10],[126,68,91,20],[126,72,91,10],[127,0,92,12],[127,12,92,12],[127,15,92,15],[127,17,92,17,"i"],[127,18,91,10],[128,0,93,12],[128,12,93,12],[128,17,93,17],[128,19,93,19],[128,20,94,14,"rotateAndTranslate"],[128,38,93,19],[128,58,96,19,"StyleSheet"],[128,82,96,30,"absoluteFillObject"],[128,100,93,19],[128,103,98,14,"focusedElementStyle"],[128,122,93,19],[129,0,91,10],[129,13,100,16,"panResponder"],[129,25,100,28],[129,26,100,29,"panHandlers"],[129,37,91,10],[130,0,91,10],[131,0,91,10],[132,0,91,10],[133,0,91,10],[134,0,91,10],[134,14,102,13,"item"],[134,18,91,10],[134,19,90,8],[135,0,105,7],[135,9,89,12],[135,15,105,11],[136,0,106,8],[136,17,107,10],[136,46,107,11],[136,67,107,10],[136,68,107,20],[136,72,107,10],[137,0,108,12],[137,12,108,12],[137,15,108,15],[137,17,108,17,"i"],[137,18,107,10],[138,0,109,12],[138,12,109,12],[138,17,109,17],[138,19,109,19],[139,0,110,14,"opacity"],[139,14,110,14,"opacity"],[139,21,110,21],[139,23,110,23,"nextCardOpacity"],[139,38,109,19],[140,0,111,14,"transform"],[140,14,111,14,"transform"],[140,23,111,23],[140,25,111,25],[140,26,111,26],[141,0,111,28,"scale"],[141,16,111,28,"scale"],[141,21,111,33],[141,23,111,35,"nextCardScale"],[142,0,111,26],[142,15,111,25],[143,0,109,19],[143,15,112,17,"StyleSheet"],[143,39,112,28,"absoluteFillObject"],[143,57,109,19],[143,60,113,15,"nextElementStyle"],[143,76,109,19],[143,77,107,10],[144,0,107,10],[145,0,107,10],[146,0,107,10],[147,0,107,10],[148,0,107,10],[148,13,115,13,"item"],[148,17,107,10],[148,18,106,8],[149,0,118,7],[150,0,119,5],[150,7,86,11],[150,9,119,7,"reverse"],[150,16,86,11],[150,18,86,4],[151,0,120,3],[153,0,121,2],[153,11,122,4],[153,40,122,5],[153,54,122,4],[154,0,122,11],[154,6,122,11],[154,10,122,15],[154,16,122,4],[155,0,122,16],[155,6,122,16],[155,12,122,22],[155,18,122,4],[156,0,122,23],[156,6,122,23],[156,11,122,28],[156,13,122,30],[156,14,122,31],[157,0,122,33,"width"],[157,8,122,33,"width"],[157,13,122,38],[157,15,122,40,"SCREEN_WIDTH"],[157,27,122,52],[157,30,122,55],[158,0,122,31],[158,7,122,30],[158,9,122,62,"style"],[158,14,122,30],[158,15,122,4],[159,0,122,4],[160,0,122,4],[161,0,122,4],[162,0,122,4],[163,0,122,4],[163,7,123,9,"renderComponents"],[163,23,123,25],[163,24,123,26,"components"],[163,34,123,25],[163,35,122,4],[163,36,121,2],[164,0,126,1],[166,0,128,0,"DeckSwiper"],[166,2,128,0,"DeckSwiper"],[166,12,128,10],[166,13,128,11,"propTypes"],[166,22,128,0],[166,25,128,23],[167,0,129,2,"components"],[167,4,129,2,"components"],[167,14,129,12],[167,16,129,14,"PropTypes"],[167,35,129,24,"array"],[167,40,129,14],[167,41,129,30,"isRequired"],[167,51,128,23],[168,0,130,2,"onSwipeRight"],[168,4,130,2,"onSwipeRight"],[168,16,130,14],[168,18,130,16,"PropTypes"],[168,37,130,26,"func"],[168,41,128,23],[169,0,131,2,"onSwipeLeft"],[169,4,131,2,"onSwipeLeft"],[169,15,131,13],[169,17,131,15,"PropTypes"],[169,36,131,25,"func"],[169,40,128,23],[170,0,132,2,"focusedElementStyle"],[170,4,132,2,"focusedElementStyle"],[170,23,132,21],[170,25,132,23,"PropTypes"],[170,44,132,33,"any"],[170,47,128,23],[171,0,133,2,"nextElementStyle"],[171,4,133,2,"nextElementStyle"],[171,20,133,18],[171,22,133,20,"PropTypes"],[171,41,133,30,"any"],[171,44,128,23],[172,0,134,2,"style"],[172,4,134,2,"style"],[172,9,134,7],[172,11,134,9,"PropTypes"],[172,30,134,19,"any"],[173,0,128,23],[173,3,128,0],[174,17,137,15,"DeckSwiper"],[174,27]]},"type":"js/module"}]}