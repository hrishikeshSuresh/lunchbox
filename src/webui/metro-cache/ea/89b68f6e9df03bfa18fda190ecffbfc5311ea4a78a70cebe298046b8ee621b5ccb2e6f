{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"cookie","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[2], \"react-native\");\n\n  var _cookie = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"cookie\"));\n\n  var CLEAR_RETRY_COUNT = 10;\n  var _default = {\n    get: function get(url, name) {\n      return _reactNative.NativeModules.RNCookieManager.getCookie(url).then(function (value) {\n        if (name && value) {\n          return _cookie.default.parse(value)[name] || null;\n        } else {\n          return value ? _cookie.default.parse(value) : null;\n        }\n      });\n    },\n    set: function set(url, name, value, options) {\n      return _reactNative.NativeModules.RNCookieManager.setCookie(url, _cookie.default.serialize(name, value, options));\n    },\n    clear: function clear(url) {\n      var _this = this;\n\n      var data;\n      return _regenerator.default.async(function clear$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regenerator.default.awrap(_reactNative.NativeModules.RNCookieManager.clearCookie(url || null));\n\n            case 2:\n              if (url) {\n                _context2.next = 4;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", null);\n\n            case 4:\n              _context2.next = 6;\n              return _regenerator.default.awrap(this.get(url));\n\n            case 6:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", data ? new Promise(function (resolve, reject) {\n                var retryCount = 0;\n                var self = _this;\n\n                function retry() {\n                  return _regenerator.default.async(function retry$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          retryCount++;\n                          _context.next = 3;\n                          return _regenerator.default.awrap(_reactNative.NativeModules.RNCookieManager.clearCookie(url));\n\n                        case 3:\n                          _context.next = 5;\n                          return _regenerator.default.awrap(self.get(url));\n\n                        case 5:\n                          if (_context.sent) {\n                            _context.next = 9;\n                            break;\n                          }\n\n                          resolve(null);\n                          _context.next = 10;\n                          break;\n\n                        case 9:\n                          if (retryCount <= CLEAR_RETRY_COUNT) {\n                            retry();\n                          } else {\n                            reject(null);\n                          }\n\n                        case 10:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  });\n                }\n\n                retry();\n              }) : null);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this);\n    }\n  };\n  exports.default = _default;\n});","map":[[11,0,1,0],[13,0,2,0],[15,0,4,0],[15,6,4,6,"CLEAR_RETRY_COUNT"],[15,23,4,23],[15,26,4,26],[15,28,4,0],[16,17,6,15],[17,0,7,4,"get"],[17,4,7,4,"get"],[17,7,6,15],[17,22,7,8,"url"],[17,25,6,15],[17,27,7,20,"name"],[17,31,6,15],[17,33,7,58],[18,0,8,8],[18,13,8,15,"NativeModules"],[18,40,8,29,"RNCookieManager"],[18,55,8,15],[18,56,8,45,"getCookie"],[18,65,8,15],[18,66,8,55,"url"],[18,69,8,15],[18,71,8,60,"then"],[18,75,8,15],[18,76,8,65],[18,86,8,66,"value"],[18,91,8,65],[18,93,8,92],[19,0,9,12],[19,12,9,16,"name"],[19,16,9,20],[19,20,9,24,"value"],[19,25,9,12],[19,27,9,31],[20,0,10,16],[20,17,10,23,"cookie"],[20,33,10,30,"parse"],[20,38,10,23],[20,39,10,36,"value"],[20,44,10,23],[20,46,10,43,"name"],[20,50,10,23],[20,55,10,52],[20,59,10,16],[21,0,11,13],[21,9,9,12],[21,15,11,19],[22,0,12,16],[22,17,12,23,"value"],[22,22,12,28],[22,25,12,31,"cookie"],[22,41,12,38,"parse"],[22,46,12,31],[22,47,12,44,"value"],[22,52,12,31],[22,53,12,28],[22,56,12,53],[22,60,12,16],[23,0,13,13],[24,0,14,9],[24,7,8,15],[24,8,8,8],[25,0,15,5],[25,5,6,15],[26,0,17,4,"set"],[26,4,17,4,"set"],[26,7,6,15],[26,22,17,8,"url"],[26,25,6,15],[26,27,17,20,"name"],[26,31,6,15],[26,33,17,34,"value"],[26,38,6,15],[26,40,17,46,"options"],[26,47,6,15],[26,49,17,73],[27,0,18,8],[27,13,18,15,"NativeModules"],[27,40,18,29,"RNCookieManager"],[27,55,18,15],[27,56,18,45,"setCookie"],[27,65,18,15],[27,66,18,55,"url"],[27,69,18,15],[27,71,18,60,"cookie"],[27,87,18,67,"serialize"],[27,96,18,60],[27,97,18,77,"name"],[27,101,18,60],[27,103,18,83,"value"],[27,108,18,60],[27,110,18,90,"options"],[27,117,18,60],[27,118,18,15],[27,119,18,8],[28,0,19,5],[28,5,6,15],[29,0,21,10,"clear"],[29,4,21,10,"clear"],[29,9,6,15],[29,26,21,16,"url"],[29,29,6,15],[30,0,6,15],[32,0,6,15],[33,0,6,15],[34,0,6,15],[35,0,6,15],[36,0,6,15],[37,0,6,15],[38,0,6,15],[38,48,22,14,"NativeModules"],[38,75,22,28,"RNCookieManager"],[38,90,22,14],[38,91,22,44,"clearCookie"],[38,102,22,14],[38,103,22,56,"url"],[38,106,22,59],[38,110,22,63],[38,114,22,14],[38,115,6,15],[40,0,6,15],[41,0,6,15],[41,18,24,13,"url"],[41,21,6,15],[42,0,6,15],[43,0,6,15],[44,0,6,15],[46,0,6,15],[46,48,25,19],[46,52,6,15],[48,0,6,15],[49,0,6,15],[50,0,6,15],[50,48,29,27],[50,53,29,32,"get"],[50,56,29,27],[50,57,29,36,"url"],[50,60,29,27],[50,61,6,15],[52,0,6,15],[53,0,29,14,"data"],[53,14,29,14,"data"],[53,18,6,15],[54,0,6,15],[54,48,31,15,"data"],[54,52,31,19],[54,55,31,22],[54,59,31,26,"Promise"],[54,66,31,22],[54,67,31,34],[54,77,31,35,"resolve"],[54,84,31,34],[54,86,31,44,"reject"],[54,92,31,34],[54,94,31,55],[55,0,32,12],[55,20,32,16,"retryCount"],[55,30,32,26],[55,33,32,29],[55,34,32,12],[56,0,33,12],[56,20,33,18,"self"],[56,24,33,22],[56,27,33,25],[56,32,33,12],[58,0,34,12],[58,25,34,27,"retry"],[58,30,34,12],[59,0,34,12],[60,0,34,12],[61,0,34,12],[62,0,34,12],[63,0,35,16,"retryCount"],[63,26,35,16,"retryCount"],[63,36,35,26],[64,0,34,12],[65,0,34,12],[65,60,36,22,"NativeModules"],[65,87,36,36,"RNCookieManager"],[65,102,36,22],[65,103,36,52,"clearCookie"],[65,114,36,22],[65,115,36,64,"url"],[65,118,36,22],[65,119,34,12],[67,0,34,12],[68,0,34,12],[69,0,34,12],[69,60,38,27,"self"],[69,64,38,31],[69,65,38,32,"get"],[69,68,38,27],[69,69,38,36,"url"],[69,72,38,27],[69,73,34,12],[71,0,34,12],[72,0,34,12],[73,0,34,12],[74,0,34,12],[75,0,34,12],[77,0,39,20,"resolve"],[77,26,39,20,"resolve"],[77,33,39,27],[77,34,39,28],[77,38,39,27],[77,39,39,20],[78,0,34,12],[79,0,34,12],[81,0,34,12],[82,0,40,23],[82,30,40,27,"retryCount"],[82,40,40,37],[82,44,40,41,"CLEAR_RETRY_COUNT"],[82,61,40,23],[82,63,40,60],[83,0,41,20,"retry"],[83,28,41,20,"retry"],[83,33,41,25],[84,0,42,17],[84,27,40,23],[84,33,42,23],[85,0,43,20,"reject"],[85,28,43,20,"reject"],[85,34,43,26],[85,35,43,27],[85,39,43,26],[85,40,43,20],[86,0,44,17],[88,0,34,12],[89,0,34,12],[90,0,34,12],[91,0,34,12],[92,0,34,12],[93,0,34,12],[94,0,34,12],[96,0,46,12,"retry"],[96,16,46,12,"retry"],[96,21,46,17],[97,0,47,9],[97,15,31,22],[97,16,31,19],[97,19,47,13],[97,23,6,15],[99,0,6,15],[100,0,6,15],[101,0,6,15],[102,0,6,15],[103,0,6,15],[104,0,6,15],[105,0,6,15],[106,0,6,15],[106,3]]},"type":"js/module"}]}