{"dependencies":[{"name":"./_baseTimes","data":{"isAsync":false}},{"name":"./_castFunction","data":{"isAsync":false}},{"name":"./toInteger","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var baseTimes = _$$_REQUIRE(_dependencyMap[0], \"./_baseTimes\"),\n      castFunction = _$$_REQUIRE(_dependencyMap[1], \"./_castFunction\"),\n      toInteger = _$$_REQUIRE(_dependencyMap[2], \"./toInteger\");\n\n  var MAX_SAFE_INTEGER = 9007199254740991;\n  var MAX_ARRAY_LENGTH = 4294967295;\n  var nativeMin = Math.min;\n\n  function times(n, iteratee) {\n    n = toInteger(n);\n\n    if (n < 1 || n > MAX_SAFE_INTEGER) {\n      return [];\n    }\n\n    var index = MAX_ARRAY_LENGTH,\n        length = nativeMin(n, MAX_ARRAY_LENGTH);\n    iteratee = castFunction(iteratee);\n    n -= MAX_ARRAY_LENGTH;\n    var result = baseTimes(length, iteratee);\n\n    while (++index < n) {\n      iteratee(index);\n    }\n\n    return result;\n  }\n\n  module.exports = times;\n});","map":[[2,0,1,0],[2,6,1,4,"baseTimes"],[2,15,1,13],[2,18,1,16,"require"],[2,29,1,23],[2,64,1,0],[3,0,1,0],[3,6,2,4,"castFunction"],[3,18,2,16],[3,21,2,19,"require"],[3,32,2,26],[3,70,1,0],[4,0,1,0],[4,6,3,4,"toInteger"],[4,15,3,13],[4,18,3,16,"require"],[4,29,3,23],[4,63,1,0],[6,0,6,0],[6,6,6,4,"MAX_SAFE_INTEGER"],[6,22,6,20],[6,25,6,23],[6,41,6,0],[7,0,9,0],[7,6,9,4,"MAX_ARRAY_LENGTH"],[7,22,9,20],[7,25,9,23],[7,35,9,0],[8,0,12,0],[8,6,12,4,"nativeMin"],[8,15,12,13],[8,18,12,16,"Math"],[8,22,12,20],[8,23,12,21,"min"],[8,26,12,0],[10,0,33,0],[10,11,33,9,"times"],[10,16,33,0],[10,17,33,15,"n"],[10,18,33,0],[10,20,33,18,"iteratee"],[10,28,33,0],[10,30,33,28],[11,0,34,2,"n"],[11,4,34,2,"n"],[11,5,34,3],[11,8,34,6,"toInteger"],[11,17,34,15],[11,18,34,16,"n"],[11,19,34,15],[11,20,34,2],[13,0,35,2],[13,8,35,6,"n"],[13,9,35,7],[13,12,35,10],[13,13,35,6],[13,17,35,15,"n"],[13,18,35,16],[13,21,35,19,"MAX_SAFE_INTEGER"],[13,37,35,2],[13,39,35,37],[14,0,36,4],[14,13,36,11],[14,15,36,4],[15,0,37,3],[17,0,38,2],[17,8,38,6,"index"],[17,13,38,11],[17,16,38,14,"MAX_ARRAY_LENGTH"],[17,32,38,2],[18,0,38,2],[18,8,39,6,"length"],[18,14,39,12],[18,17,39,15,"nativeMin"],[18,26,39,24],[18,27,39,25,"n"],[18,28,39,24],[18,30,39,28,"MAX_ARRAY_LENGTH"],[18,46,39,24],[18,47,38,2],[19,0,41,2,"iteratee"],[19,4,41,2,"iteratee"],[19,12,41,10],[19,15,41,13,"castFunction"],[19,27,41,25],[19,28,41,26,"iteratee"],[19,36,41,25],[19,37,41,2],[20,0,42,2,"n"],[20,4,42,2,"n"],[20,5,42,3],[20,9,42,7,"MAX_ARRAY_LENGTH"],[20,25,42,2],[21,0,44,2],[21,8,44,6,"result"],[21,14,44,12],[21,17,44,15,"baseTimes"],[21,26,44,24],[21,27,44,25,"length"],[21,33,44,24],[21,35,44,33,"iteratee"],[21,43,44,24],[21,44,44,2],[23,0,45,2],[23,11,45,9],[23,13,45,11,"index"],[23,18,45,9],[23,21,45,19,"n"],[23,22,45,2],[23,24,45,22],[24,0,46,4,"iteratee"],[24,6,46,4,"iteratee"],[24,14,46,12],[24,15,46,13,"index"],[24,20,46,12],[24,21,46,4],[25,0,47,3],[27,0,48,2],[27,11,48,9,"result"],[27,17,48,2],[28,0,49,1],[30,0,51,0,"module"],[30,2,51,0,"module"],[30,8,51,6],[30,9,51,7,"exports"],[30,16,51,0],[30,19,51,17,"times"],[30,24,51,0]]},"type":"js/module"}]}