{
  "_args": [
    [
      {
        "raw": "react-native-push-notification",
        "scope": null,
        "escapedName": "react-native-push-notification",
        "name": "react-native-push-notification",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/satya/Desktop/SE/lunchbox/src/webui"
    ]
  ],
  "_from": "react-native-push-notification",
  "_hasShrinkwrap": false,
  "_id": "react-native-push-notification@3.1.9",
  "_location": "/react-native-push-notification",
  "_nodeVersion": "10.11.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-push-notification_3.1.9_1565729914740_0.08223550020890213"
  },
  "_npmUser": {
    "name": "zo0r",
    "email": "z@zo0r.me"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-push-notification",
    "scope": null,
    "escapedName": "react-native-push-notification",
    "name": "react-native-push-notification",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-push-notification/-/react-native-push-notification-3.1.9.tgz",
  "_shasum": "760ee06e743fef74fc9fcb672dac40794fdc4c47",
  "_shrinkwrap": null,
  "_spec": "react-native-push-notification",
  "_where": "/home/satya/Desktop/SE/lunchbox/src/webui",
  "author": {
    "name": "zo0r",
    "email": "http://zo0r.me"
  },
  "bugs": {
    "url": "https://github.com/zo0r/react-native-push-notification/issues"
  },
  "dependencies": {
    "@react-native-community/push-notification-ios": "^1.0.1"
  },
  "description": "React Native Local and Remote Notifications",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-YpEg9AYBjNgJtHRgHKR0xPB7kk3Gj0uSjUxd0feOIvd7wrfR+zeiBM4NZonGmjlAG6thaE37dfAG5qcsONFM7w==",
    "shasum": "760ee06e743fef74fc9fcb672dac40794fdc4c47",
    "tarball": "https://registry.npmjs.org/react-native-push-notification/-/react-native-push-notification-3.1.9.tgz",
    "fileCount": 27,
    "unpackedSize": 143260,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdUyR7CRA9TVsSAnZWagAAYdwP/RnyrLNUFI0Sl28iC5DT\nqp0j3sZXNZR76sKNIs0GyPplX4huCXwmcaeNDMpZR++dVnP4QcfnNHOlblWo\nuiyZDjsutXFRHUV3fmLLmquMmW4XUpyfqo3+2cy3nveq2pnpt790kEGK8kxM\nEHtvaytBPR2zuMt6OK8qxMGgrqgDE1kRsopIJZM8vUFLUf6rkevl37op17E1\nJzbeYEC/VHffHVwH892pFj/ONqtncWKH3gT/C58O0rdxQykmf4Dygzvhismb\nH+3YPM0XFoAcoS6ei1ikbsa74v4sVzJqKf11PF2zrxB1j57wlBpz6QqMD0+M\nOvPNhIOBPr62FrA51MRIvfr+sJ2ngAudAG51aqpwSgn3mgMRWp0nLcGIGv7K\nuUBy8dUSATYQUFe/QJ5Wvlyvze/Y8i76Rz+adn0UuidNg3BLVTKnTrj02CfL\nzguFGBOasEl4bhS39q2+IpP6Ajdc8q3YBJCjf3FmqMVY3W/luvqEPGR71rsc\nnKgH+lPWAftwaRJHq9g8RhkPn8q754Rb59SfCKnsvqqajM/EXPBG+QY2PL4J\nJGeh5unaDoq/Jkh6OqlSqoHa76L6Z6UcqG0zNMtyu3CQbl4IQKKPklkeeTLJ\nz+jmdiazRhcpM8OYScPZj+bo39TJ4OCts0PqRmk5xvSNC91piA2JbAakXuVT\noD7g\r\n=ybuh\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "b4ea8fbf4b9443be186c5ee9fa8f77dc07905961",
  "homepage": "https://github.com/zo0r/react-native-push-notification#readme",
  "keywords": [
    "react-component",
    "react-native",
    "ios",
    "android",
    "notifications",
    "push",
    "apns",
    "gcm"
  ],
  "license": "MIT",
  "main": "index",
  "maintainers": [
    {
      "name": "zo0r",
      "email": "z@zo0r.me"
    }
  ],
  "name": "react-native-push-notification",
  "optionalDependencies": {},
  "peerDependencies": {
    "react-native": ">=0.33"
  },
  "readme": "# React Native Push Notifications\n\n[![npm version](https://badge.fury.io/js/react-native-push-notification.svg?update=9)](http://badge.fury.io/js/react-native-push-notification)\n[![npm downloads](https://img.shields.io/npm/dm/react-native-push-notification.svg?update=9)](http://badge.fury.io/js/react-native-push-notification)\n\nReact Native Local and Remote Notifications for iOS and Android\n\n## Supported React Native Versions\n\n| Component Version | RN Versions          | README                                                                                                                 |\n| ----------------- | -------------------- | ---------------------------------------------------------------------------------------------------------------------- |\n| **1.0.7**         | **<= 0.27**          | [Open](https://github.com/zo0r/react-native-push-notification/blob/f42723817f1687e0da23e6753eb8a9f0385b6ac5/README.md) |\n| **1.0.8**         | **0.28**             | [Open](https://github.com/zo0r/react-native-push-notification/blob/2eafd1961273ca6a82ad4dd6514fbf1d1a829089/README.md) |\n| **2.0.1**         | **0.29**             | [Open](https://github.com/zo0r/react-native-push-notification/blob/c7ab7cd84ea19e42047379aefaf568bb16a81936/README.md) |\n| **2.0.2**         | **0.30, 0.31, 0.32** | [Open](https://github.com/zo0r/react-native-push-notification/blob/a0f7d44e904ba0b92933518e5bf6b444f1c90abb/README.md) |\n| **>= 2.1.0**      | **>= 0.33**          | [Open](https://github.com/zo0r/react-native-push-notification/blob/a359e5c00954aa324136eaa9808333d6ca246171/README.md) |\n\n## Changelog\n\nChangelog is available from version 3.1.3 here: [Changelog](https://github.com/zo0r/react-native-push-notification/blob/master/CHANGELOG.md)\n\n## Installation\n\n`npm install --save react-native-push-notification` or `yarn add react-native-push-notification`\n\n`react-native link react-native-push-notification`\n\n**NOTE: For Android, you will still have to manually update the AndroidManifest.xml (as below) in order to use Scheduled Notifications.**\n\n## Issues\n\nHaving a problem? Read the [troubleshooting](./trouble-shooting.md) guide before raising an issue.\n\n## Pull Requests\n\n[Please read...](./submitting-a-pull-request.md)\n\n## iOS manual Installation\n\nThe component uses PushNotificationIOS for the iOS part.\n\n[Please see: PushNotificationIOS](https://github.com/react-native-community/react-native-push-notification-ios)\n\n## Android manual Installation\n\n**NOTE: `play-service-gcm` and `firebase-messaging`, prior to version 15 requires to have the same version number in order to work correctly at build time and at run time. To use a specific version:**\n\nIn your `android/build.gradle`\n\n```gradle\next {\n    googlePlayServicesVersion = \"<Your play services version>\" // default: \"+\"\n    firebaseVersion = \"<Your Firebase version>\" // default: \"+\"\n\n    // Other settings\n    compileSdkVersion = <Your compile SDK version> // default: 23\n    buildToolsVersion = \"<Your build tools version>\" // default: \"23.0.1\"\n    targetSdkVersion = <Your target SDK version> // default: 23\n    supportLibVersion = \"<Your support lib version>\" // default: 23.1.1\n}\n```\n\n**NOTE: localNotification() works without changes in the application part, while localNotificationSchedule() only works with these changes:**\n\nIn your `AndroidManifest.xml`\n\n```xml\n    .....\n    <!-- < Only if you're using GCM or localNotificationSchedule() > -->\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n    <permission\n        android:name=\"${applicationId}.permission.C2D_MESSAGE\"\n        android:protectionLevel=\"signature\" />\n    <uses-permission android:name=\"${applicationId}.permission.C2D_MESSAGE\" />\n    <!-- < Only if you're using GCM or localNotificationSchedule() > -->\n\n    <uses-permission android:name=\"android.permission.VIBRATE\" />\n    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\"/>\n\n    <application ....>\n        <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_channel_name\"\n                android:value=\"YOUR NOTIFICATION CHANNEL NAME\"/>\n        <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_channel_description\"\n                    android:value=\"YOUR NOTIFICATION CHANNEL DESCRIPTION\"/>\n        <!-- Change the resource name to your App's accent color - or any other color you want -->\n        <meta-data  android:name=\"com.dieam.reactnativepushnotification.notification_color\"\n                    android:resource=\"@android:color/white\"/>\n\n        <!-- < Only if you're using GCM or localNotificationSchedule() > -->\n        <receiver\n            android:name=\"com.google.android.gms.gcm.GcmReceiver\"\n            android:exported=\"true\"\n            android:permission=\"com.google.android.c2dm.permission.SEND\" >\n            <intent-filter>\n                <action android:name=\"com.google.android.c2dm.intent.RECEIVE\" />\n                <category android:name=\"${applicationId}\" />\n            </intent-filter>\n        </receiver>\n        <!-- < Only if you're using GCM or localNotificationSchedule() > -->\n\n        <receiver android:name=\"com.dieam.reactnativepushnotification.modules.RNPushNotificationPublisher\" />\n        <receiver android:name=\"com.dieam.reactnativepushnotification.modules.RNPushNotificationBootEventReceiver\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n            </intent-filter>\n        </receiver>\n        <service android:name=\"com.dieam.reactnativepushnotification.modules.RNPushNotificationRegistrationService\"/>\n\n        <!-- < Only if you're using GCM or localNotificationSchedule() > -->\n        <service\n            android:name=\"com.dieam.reactnativepushnotification.modules.RNPushNotificationListenerServiceGcm\"\n            android:exported=\"false\" >\n            <intent-filter>\n                <action android:name=\"com.google.android.c2dm.intent.RECEIVE\" />\n            </intent-filter>\n        </service>\n        <!-- </ Only if you're using GCM or localNotificationSchedule() > -->\n\n        <!-- < Else > -->\n        <service\n            android:name=\"com.dieam.reactnativepushnotification.modules.RNPushNotificationListenerService\"\n            android:exported=\"false\" >\n            <intent-filter>\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\n            </intent-filter>\n        </service>\n        <!-- </Else> -->\n     .....\n```\n\nIn `android/settings.gradle`\n\n```gradle\n...\ninclude ':react-native-push-notification'\nproject(':react-native-push-notification').projectDir = file('../node_modules/react-native-push-notification/android')\n```\n\nIn `android/app/src/res/values/colors.xml` (Create the file if it doesn't exist).\n\n```xml\n<resources>\n    <color name=\"white\">#FFF</color>\n</resources>\n```\n\nManually register module in `MainApplication.java` (if you did not use `react-native link`):\n\n```java\nimport com.dieam.reactnativepushnotification.ReactNativePushNotificationPackage;  // <--- Import Package\n\npublic class MainApplication extends Application implements ReactApplication {\n\n  private final ReactNativeHost mReactNativeHost = new ReactNativeHost(this) {\n      @Override\n      protected boolean getUseDeveloperSupport() {\n        return BuildConfig.DEBUG;\n      }\n\n      @Override\n      protected List<ReactPackage> getPackages() {\n\n      return Arrays.<ReactPackage>asList(\n          new MainReactPackage(),\n          new ReactNativePushNotificationPackage() // <---- Add the Package\n      );\n    }\n  };\n\n  ....\n}\n```\n\n## Usage\n\n```javascript\nvar PushNotification = require(\"react-native-push-notification\");\n\nPushNotification.configure({\n  // (optional) Called when Token is generated (iOS and Android)\n  onRegister: function(token) {\n    console.log(\"TOKEN:\", token);\n  },\n\n  // (required) Called when a remote or local notification is opened or received\n  onNotification: function(notification) {\n    console.log(\"NOTIFICATION:\", notification);\n\n    // process the notification\n\n    // required on iOS only (see fetchCompletionHandler docs: https://github.com/react-native-community/react-native-push-notification-ios)\n    notification.finish(PushNotificationIOS.FetchResult.NoData);\n  },\n\n  // ANDROID ONLY: GCM or FCM Sender ID (product_number) (optional - not required for local notifications, but is need to receive remote push notifications)\n  senderID: \"YOUR GCM (OR FCM) SENDER ID\",\n\n  // IOS ONLY (optional): default: all - Permissions to register.\n  permissions: {\n    alert: true,\n    badge: true,\n    sound: true\n  },\n\n  // Should the initial notification be popped automatically\n  // default: true\n  popInitialNotification: true,\n\n  /**\n   * (optional) default: true\n   * - Specified if permissions (ios) and token (android and ios) will requested or not,\n   * - if not, you must call PushNotificationsHandler.requestPermissions() later\n   */\n  requestPermissions: true\n});\n```\n\n## Example app\n\nExample folder contains an example app to demonstrate how to use this package. The notification Handling is done in `NotifService.js`. For Remote notifications, configure your SenderId in `app.json`. You can also edit it directly in the app.\nTo send Push notifications, you can use the online tool [PushWatch](https://www.pushwatch.com/gcm/).\n\nPlease test your PRs with this example app before submitting them. It'll help maintaining this repo.\n\n## Handling Notifications\n\nWhen any notification is opened or received the callback `onNotification` is called passing an object with the notification data.\n\nNotification object example:\n\n```javascript\n{\n    foreground: false, // BOOLEAN: If the notification was received in foreground or not\n    userInteraction: false, // BOOLEAN: If the notification was opened by the user from the notification area or not\n    message: 'My Notification Message', // STRING: The notification message\n    data: {}, // OBJECT: The push data\n}\n```\n\n## Local Notifications\n\n`PushNotification.localNotification(details: Object)`\n\nEXAMPLE:\n\n```javascript\nPushNotification.localNotification({\n    /* Android Only Properties */\n    id: '0', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID\n    ticker: \"My Notification Ticker\", // (optional)\n    autoCancel: true, // (optional) default: true\n    largeIcon: \"ic_launcher\", // (optional) default: \"ic_launcher\"\n    smallIcon: \"ic_notification\", // (optional) default: \"ic_notification\" with fallback for \"ic_launcher\"\n    bigText: \"My big text that will be shown when notification is expanded\", // (optional) default: \"message\" prop\n    subText: \"This is a subText\", // (optional) default: none\n    color: \"red\", // (optional) default: system default\n    vibrate: true, // (optional) default: true\n    vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000\n    tag: 'some_tag', // (optional) add tag to message\n    group: \"group\", // (optional) add group to message\n    ongoing: false, // (optional) set whether this is an \"ongoing\" notification\n    priority: \"high\", // (optional) set notification priority, default: high\n    visibility: \"private\", // (optional) set notification visibility, default: private\n    importance: \"high\", // (optional) set notification importance, default: high\n\n    /* iOS only properties */\n    alertAction: // (optional) default: view\n    category: // (optional) default: null\n    userInfo: // (optional) default: null (object containing additional notification data)\n\n    /* iOS and Android properties */\n    title: \"My Notification Title\", // (optional)\n    message: \"My Notification Message\", // (required)\n    playSound: false, // (optional) default: true\n    soundName: 'default', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)\n    number: '10', // (optional) Valid 32 bit integer specified as string. default: none (Cannot be zero)\n    repeatType: 'day', // (optional) Repeating interval. Check 'Repeating Notifications' section for more info.\n    actions: '[\"Yes\", \"No\"]',  // (Android only) See the doc for notification actions to know more\n});\n```\n\n## Scheduled Notifications\n\n`PushNotification.localNotificationSchedule(details: Object)`\n\nEXAMPLE:\n\n```javascript\nPushNotification.localNotificationSchedule({\n  //... You can use all the options from localNotifications\n  message: \"My Notification Message\", // (required)\n  date: new Date(Date.now() + 60 * 1000) // in 60 secs\n});\n```\n\n## Custom sounds\n\nIn android, add your custom sound file to `[project_root]/android/app/src/main/res/raw`\n\nIn iOS, add your custom sound file to the project `Resources` in xCode.\n\nIn the location notification json specify the full file name:\n\n    soundName: 'my_sound.mp3'\n\n## Cancelling notifications\n\n### 1) cancelLocalNotifications\n\n#### Android\n\nThe `id` parameter for `PushNotification.localNotification` is required for this operation. The id supplied will then be used for the cancel operation.\n\n```javascript\n// Android\nPushNotification.localNotification({\n    ...\n    id: '123'\n    ...\n});\nPushNotification.cancelLocalNotifications({id: '123'});\n```\n\n## Notification priority\n\n(optional) Specify `priority` to set priority of notification. Default value: \"high\"\n\nAvailable options:\n\n\"max\" = NotficationCompat.PRIORITY_MAX  \n\"high\" = NotficationCompat.PRIORITY_HIGH  \n\"low\" = NotficationCompat.PRIORITY_LOW  \n\"min\" = NotficationCompat.PRIORITY_MIN  \n\"default\" = NotficationCompat.PRIORITY_DEFAULT\n\nMore information: https://developer.android.com/reference/android/app/Notification.html#PRIORITY_DEFAULT\n\n## Notification visibility\n\n(optional) Specify `visibility` to set visibility of notification. Default value: \"private\"\n\nAvailable options:\n\n\"private\" = NotficationCompat.VISIBILITY_PRIVATE  \n\"public\" = NotficationCompat.VISIBILITY_PUBLIC  \n\"secret\" = NotficationCompat.VISIBILITY_SECRET\n\nMore information: https://developer.android.com/reference/android/app/Notification.html#VISIBILITY_PRIVATE\n\n## Notification importance\n\n(optional) Specify `importance` to set importance of notification. Default value: \"high\"\n\nAvailable options:\n\n\"default\" = NotificationManager.IMPORTANCE_DEFAULT  \n\"max\" = NotificationManager.IMPORTANCE_MAX  \n\"high\" = NotificationManager.IMPORTANCE_HIGH  \n\"low\" = NotificationManager.IMPORTANCE_LOW  \n\"min\" = NotificationManager.IMPORTANCE_MIN  \n\"none\" = NotificationManager.IMPORTANCE_NONE  \n\"unspecified\" = NotificationManager.IMPORTANCE_UNSPECIFIED\n\nMore information: https://developer.android.com/reference/android/app/NotificationManager#IMPORTANCE_DEFAULT\n\n#### IOS\n\nThe `userInfo` parameter for `PushNotification.localNotification` is required for this operation and must contain an `id` parameter. The id supplied will then be used for the cancel operation.\n\n```javascript\n// IOS\nPushNotification.localNotification({\n    ...\n    userInfo: { id: '123' }\n    ...\n});\nPushNotification.cancelLocalNotifications({id: '123'});\n```\n\n### 2) cancelAllLocalNotifications\n\n`PushNotification.cancelAllLocalNotifications()`\n\nCancels all scheduled notifications AND clears the notifications alerts that are in the notification centre.\n\n_NOTE: there is currently no api for removing specific notification alerts from the notification centre._\n\n## Repeating Notifications\n\n(optional) Specify `repeatType` and optionally `repeatTime` while scheduling the local notification. Check the local notification example above.\n\nProperty `repeatType` could be one of `month`, `week`, `day`, `hour`, `minute`, `time`. If specified as time, it should be accompanied by one more parameter `repeatTime` which should the number of milliseconds between each interval.\n\n## Notification Actions\n\n(Android only) [Refer](https://github.com/zo0r/react-native-push-notification/issues/151) to this issue to see an example of a notification action.\n\nTwo things are required to setup notification actions.\n\n### 1) Specify notification actions for a notification\n\nThis is done by specifying an `actions` parameters while configuring the local notification. This is an array of strings where each string is a notification action that will be presented with the notification.\n\nFor e.g. `actions: '[\"Accept\", \"Reject\"]' // Must be in string format`\n\nThe array itself is specified in string format to circumvent some problems because of the way JSON arrays are handled by react-native android bridge.\n\n### 2) Specify handlers for the notification actions\n\nFor each action specified in the `actions` field, we need to add a handler that is called when the user clicks on the action. This can be done in the `componentWillMount` of your main app file or in a separate file which is imported in your main app file. Notification actions handlers can be configured as below:\n\n```\nimport PushNotificationAndroid from 'react-native-push-notification'\n\n(function() {\n  // Register all the valid actions for notifications here and add the action handler for each action\n  PushNotificationAndroid.registerNotificationActions(['Accept','Reject','Yes','No']);\n  DeviceEventEmitter.addListener('notificationActionReceived', function(action){\n    console.log ('Notification action received: ' + action);\n    const info = JSON.parse(action.dataJSON);\n    if (info.action == 'Accept') {\n      // Do work pertaining to Accept action here\n    } else if (info.action == 'Reject') {\n      // Do work pertaining to Reject action here\n    }\n    // Add all the required actions handlers\n  });\n})();\n```\n\nFor iOS, you can use this [package](https://github.com/holmesal/react-native-ios-notification-actions) to add notification actions.\n\n## Set application badge icon\n\n`PushNotification.setApplicationIconBadgeNumber(number: number)`\n\nWorks natively in iOS.\n\nUses the [ShortcutBadger](https://github.com/leolin310148/ShortcutBadger) on Android, and as such will not work on all Android devices.\n\n## Sending Notification Data From Server\n\nSame parameters as `PushNotification.localNotification()`\n\n## Android Only Methods\n\n`PushNotification.subscribeToTopic(topic: string)` Subscribe to a topic (works only with Firebase)\n\n## Checking Notification Permissions\n\n`PushNotification.checkPermissions(callback: Function)` Check permissions\n\n`callback` will be invoked with a `permissions` object:\n\n- `alert`: boolean\n- `badge`: boolean\n- `sound`: boolean\n\n## iOS Only Methods\n\n`PushNotification.getApplicationIconBadgeNumber(callback: Function)` Get badge number\n\n`PushNotification.abandonPermissions()` Abandon permissions\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/zo0r/react-native-push-notification.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "3.1.9"
}
